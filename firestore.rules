rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read: if request.auth != null &&( (request.auth.uid == resource.data.uid) || (request.auth.uid == resource.data.userId));
        
    }
     match /products/{document=**} {
      allow read: if request.auth != null;
      //logged in user uid must match the document creator to read & write
      // allow read, delete: if request.auth.uid == resource.data.uid;
    
    }
 match /users/{document=**} {
      allow create: if request.auth != null;
      //logged in user uid must match the document creator to read & write
      // allow read, delete: if request.auth.uid == resource.data.uid;
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
 match /cart/{document=**} { 
      allow create: if request.auth != null;
      //logged in user uid must match the document creator to read & write
      // allow read, delete: if request.auth.uid == resource.data.uid;
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
     match /customRecipe/{document=**} {
      allow create: if request.auth != null;
      //logged in user uid must match the document creator to read & write
      // allow read, delete: if request.auth.uid == resource.data.uid;
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
     match /addresses/{document=**} {
      allow create: if request.auth != null;
      //logged in user uid must match the document creator to read & write
      // allow read, delete: if request.auth.uid == resource.data.uid;
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

  }
}